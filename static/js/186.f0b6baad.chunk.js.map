{"version":3,"file":"static/js/186.f0b6baad.chunk.js","mappings":"gMAEaA,E,QAAYC,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gF,SCcnC,EAbe,WACb,OACEC,EAAAA,EAAAA,KAACL,EAAS,CAAAM,UACRD,EAAAA,EAAAA,KAACE,EAAAA,GAAY,CACXC,OAAO,MACPC,MAAM,MACNC,MAAM,SACNC,UAAU,aAIlB,C,gHCkCA,UA3CgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAiB1B,OAfAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACN,OAAlBZ,GAAW,GAAOU,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEMC,EAAAA,EAAAA,IAAaxB,GAAS,KAAD,EAArCM,EAAOe,EAAAI,KACblB,EAAWD,GAAUe,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAErBM,QAAQC,IAAGP,EAAAK,IAAS,QAED,OAFCL,EAAAC,KAAA,GAEpBX,GAAW,GAAQU,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAZ,EAAA,wBAEtB,kBAVsB,OAAAJ,EAAAiB,MAAA,KAAAC,UAAA,KAWvBnB,GACF,GAAG,CAACb,KAGFiC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAxC,SAAA,CACGgB,IAAWjB,EAAAA,EAAAA,KAAC0C,EAAAA,EAAM,IAAK,IAEJ,IAAnB7B,EAAQ8B,SACP3C,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,MAAAC,SACGY,EAAQ+B,KAAI,SAAAC,GAAM,OACjBL,EAAAA,EAAAA,MAAA,MAAAvC,SAAA,EACEuC,EAAAA,EAAAA,MAAA,MAAAvC,SAAA,CAAI,WAAS4C,EAAOC,WACpB9C,EAAAA,EAAAA,KAAA,KAAAC,SAAI4C,EAAOE,YAFJF,EAAOG,GAGX,QAKO,IAAnBnC,EAAQ8B,SACP3C,EAAAA,EAAAA,KAAA,OAAAC,SAAK,+CAIb,C,0LC1CMgD,EAAU,mCAGhBC,EAAAA,EAAMC,SAASC,QAAU,gCAGlB,IAAMC,EAAa,eAAAhC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAA6B,EAAA,OAAA/B,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACJoB,EAAAA,EAAMK,IAAI,8BAADC,OAA+BP,IAAW,KAAD,EAA3D,OAARK,EAAQ1B,EAAAI,KAAAJ,EAAA6B,OAAA,SACPH,EAASI,KAAKC,SAAO,wBAAA/B,EAAAS,OAAA,GAAAZ,EAAA,KAC7B,kBAHyB,OAAAJ,EAAAiB,MAAA,KAAAC,UAAA,KAMbqB,EAAoB,eAAAC,GAAAvC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAsC,EAAMC,GAAO,IAAAT,EAAA,OAAA/B,EAAAA,EAAAA,KAAAI,MAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,cAAAkC,EAAAlC,KAAA,EACxBoB,EAAAA,EAAMK,IAAI,wBAADC,OACNP,EAAO,qDAAAO,OAAoDO,IACnF,KAAD,EAFa,OAART,EAAQU,EAAAhC,KAAAgC,EAAAP,OAAA,SAGPH,EAASI,KAAKC,SAAO,wBAAAK,EAAA3B,OAAA,GAAAyB,EAAA,KAC7B,gBALgCG,GAAA,OAAAJ,EAAAvB,MAAA,KAAAC,UAAA,KAQpB2B,EAAiB,eAAAC,GAAA7C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAA4C,EAAM7D,GAAO,IAAA+C,EAAA,OAAA/B,EAAAA,EAAAA,KAAAI,MAAA,SAAA0C,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,cAAAuC,EAAAvC,KAAA,EACrBoB,EAAAA,EAAMK,IAAI,SAADC,OACrBjD,EAAO,aAAAiD,OAAYP,EAAO,oBACnC,KAAD,EAFa,OAARK,EAAQe,EAAArC,KAAAqC,EAAAZ,OAAA,SAGPH,EAASI,MAAI,wBAAAW,EAAAhC,OAAA,GAAA+B,EAAA,KACrB,gBAL6BE,GAAA,OAAAH,EAAA7B,MAAA,KAAAC,UAAA,KAQjBgC,EAAW,eAAAC,GAAAlD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAiD,EAAMlE,GAAO,IAAA+C,EAAA,OAAA/B,EAAAA,EAAAA,KAAAI,MAAA,SAAA+C,GAAA,cAAAA,EAAA7C,KAAA6C,EAAA5C,MAAA,cAAA4C,EAAA5C,KAAA,EACfoB,EAAAA,EAAMK,IAAI,SAADC,OACrBjD,EAAO,qBAAAiD,OAAoBP,EAAO,oBAC3C,KAAD,EAFa,OAARK,EAAQoB,EAAA1C,KAAA0C,EAAAjB,OAAA,SAGPH,EAASI,KAAKiB,MAAI,wBAAAD,EAAArC,OAAA,GAAAoC,EAAA,KAC1B,gBALuBG,GAAA,OAAAJ,EAAAlC,MAAA,KAAAC,UAAA,KAQXR,EAAY,eAAA8C,GAAAvD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAsD,EAAMvE,GAAO,IAAA+C,EAAA,OAAA/B,EAAAA,EAAAA,KAAAI,MAAA,SAAAoD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,cAAAiD,EAAAjD,KAAA,EAChBoB,EAAAA,EAAMK,IAAI,SAADC,OACrBjD,EAAO,qBAAAiD,OAAoBP,EAAO,2BAC3C,KAAD,EAFa,OAARK,EAAQyB,EAAA/C,KAAA+C,EAAAtB,OAAA,SAGPH,EAASI,KAAKC,SAAO,wBAAAoB,EAAA1C,OAAA,GAAAyC,EAAA,KAC7B,gBALwBE,GAAA,OAAAH,EAAAvC,MAAA,KAAAC,UAAA,I","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Reviews/Reviews.jsx","services/TmbdApi.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { BallTriangle } from 'react-loader-spinner';\nimport { Container } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <Container>\n      <BallTriangle\n        height=\"100\"\n        width=\"100\"\n        color=\"tomato\"\n        ariaLabel=\"loading\"\n      />\n    </Container>\n  );\n};\n\nexport default Loader;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchReviews } from '..//..//services/TmbdApi';\nimport Loader from '../Loader/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams(); // Получение параметра movieId из URL с помощью хука useParams\n  const [reviews, setReviews] = useState([]); // Состояние для хранения отзывов\n  const [loading, setLoading] = useState(false); // Состояние для отображения состояния загрузки\n\n  useEffect(() => {\n    const fetchReviewsFilms = async () => {\n      setLoading(true); // Устанавливаем состояние загрузки в true перед запросом\n      try {\n        const reviews = await fetchReviews(movieId); // Выполняем запрос на получение отзывов с использованием API-сервиса\n        setReviews(reviews); // Устанавливаем полученные отзывы в состояние\n      } catch (error) {\n        console.log(error); // Обрабатываем возможные ошибки и выводим их в консоль\n      } finally {\n        setLoading(false); // Устанавливаем состояние загрузки в false после завершения запроса\n      }\n    };\n    fetchReviewsFilms(); // Вызываем функцию получения отзывов при каждом изменении параметра movieId\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}{' '}\n      {/* Отображение компонента загрузки во время выполнения запроса */}\n      {reviews.length !== 0 && (\n        <div>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <h2>Author: {review.author}</h2>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {reviews.length === 0 && (\n        <div>We don't have any reviews for this movie</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","// Импортируем модуль axios для работы с HTTP-запросами\nimport axios from 'axios';\n\n// Константа с API-ключом\nconst API_KEY = '992758a4802a699e8df27d4d6efc34fb';\n\n// Устанавливаем базовый URL для всех запросов\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// Функция для получения трендовых фильмов\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\n// Функция для поиска фильмов по ключевому слову\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\n// Функция для получения деталей фильма по его идентификатору\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\n// Функция для получения списка актеров фильма\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\n// Функция для получения отзывов о фильме\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","_jsx","children","BallTriangle","height","width","color","ariaLabel","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","loading","setLoading","useEffect","fetchReviewsFilms","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_reviews","wrap","_context","prev","next","fetchReviews","sent","t0","console","log","finish","stop","apply","arguments","_jsxs","_Fragment","Loader","length","map","review","author","content","id","API_KEY","axios","defaults","baseURL","fetchTrending","response","get","concat","abrupt","data","results","fetchSearchByKeyword","_ref2","_callee2","keyword","_context2","_x","fetchMovieDetails","_ref3","_callee3","_context3","_x2","fetchActors","_ref4","_callee4","_context4","cast","_x3","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}